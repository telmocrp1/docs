{
  "openapi": "3.0.1",
  "info": {
    "title": "Employee Scraping API",
    "description": "An API for scraping employee data from LinkedIn",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://scrape.revook.co/v1"
    }
  ],
  "paths": {
    "/all_employeess": {
      "post": {
        "description": "Returns employee data based on the provided LinkedIn company ID and other optional filters",
        "requestBody": {
          "description": "Employee scraping parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScrapingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Scraping successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeData"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "No employees found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/changed-jobs": {
      "post": {
        "description": "Returns data on employees who have changed jobs based on the provided LinkedIn company ID and other optional filters",
        "requestBody": {
          "description": "Job change scraping parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScrapingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Scraping successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmployeeData"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "No job changes found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ScrapingRequest": {
        "type": "object",
        "required": [
          "linkedin_id",
          "x_api_key"
        ],
        "properties": {
          "linkedin_id": {
            "type": "string",
            "description": "The LinkedIn Company ID you want to scrape"
          },
          "title_filter": {
            "type": "string",
            "description": "Job titles to search for, enclosed in parentheses and separated by commas"
          },
          "title_exclusion": {
            "type": "string",
            "description": "Job titles to exclude from the search, enclosed in parentheses and separated by commas"
          },
          "geography": {
            "type": "string",
            "description": "Geography IDs to scrape"
          },
          "function": {
            "type": "string",
            "description": "Function IDs to scrape"
          },
          "seniority": {
            "type": "string",
            "description": "Seniority IDs to scrape"
          },
          "webhook": {
            "type": "string",
            "description": "Webhook URL for receiving results"
          },
          "x_api_key": {
            "type": "string",
            "description": "Your API key"
          }
        }
      },
      "EmployeeData": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "linkedin": {
            "type": "string"
          },
          "localisation": {
            "type": "string"
          },
          "linkedin_id": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "title_original": {
            "type": "string"
          },
          "started_position_year": {
            "type": "integer"
          },
          "started_position_month": {
            "type": "integer"
          },
          "executionId": {
            "type": "integer"
          },
          "tenure_at_company_month": {
            "type": "integer"
          },
          "tenure_at_company_year": {
            "type": "integer"
          },
          "tenure_at_position": {
            "type": "integer"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}